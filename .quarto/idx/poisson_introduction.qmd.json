{"title":"poisson_introduction","markdown":{"yaml":{"title":"poisson_introduction","author":"Brittany Alexandra","date":"`r Sys.Date()`","format":{"html":{"theme":"cerulean","toc":true,"toc-depth":2,"toc-location":"left","code-fold":true,"code-tools":true}},"editor_options":{"markdown":{"wrap":72}}},"headingText":"Modelling processes that evolve randomly over time","containsRefs":false,"markdown":"\n\n\nWelcome to the soft introduction into Poisson modelling in R!\n\nMany things in life can be modelled with the poisson process as it quite\nliterally models the long-term average rate of which random events occur\nindepdently. Its subjectively the most widely used model of a point\nprocess in time, and is suitable for\n\n-   Inbound calls to a call center\n\n-   Unique visitors to a website\n\n-   Walk-in arrivals to a physical location (customers or patients)\n\n-   The frequency of volcanic eruptions\n\nWhen we first learn about Poisson models, it's tempting to think the\nresponse mean is modeled directly as $\\mu_i = \\beta_0 + \\beta_1 x_i$,\nbut this isn\\'t actually valid. The mean must be non-negative, yet the\nlinear predictor $\\beta_0 + \\beta_1 x_i$ can be any real number,\nincluding negative values. Therefore, modelling $\\mu_i$ this way risks\npredicting impossible values (e.g. negative) values. To ensure\n$\\mu_i > 0$, R (and the underlying GLM framework) uses a **log link**\n$\\log(mu_i) = \\beta_0 + \\beta_1 x_i ⇒ \\mu_i =exp(beta_0 + \\beta_1 x_i)$\nThis transformation guarantees that \\$\\\\mu_i\\$ is always positive, even\nif the linear predictor is negative. You can think of the model as being\nlinear **on the log scale**. Further, due to the logarithmic\ntransformation, we must interpret coefficients multiplicatively: a\none-unit increase in $x$ is associated with a **multiplicative** change\nin $\\mu_i$.\n\nThese two plots help visualize how the Poisson model transforms values\nusing a **log link**. The log ensures the model stays linear on the log\nscale, while the exponential ensures predictions for the mean response,\nμ, are always positive.\n\n-   The log link function transforms the expected value of our response\n    variable, $\\mu$ (which must be ≥ 0) into a value on the real number\n    line. This is shown in the left plot: as $\\mu$increases, η=log⁡(μ)\n    grows slowly but without bounds.\n\n-   Conversely, the inverse link function (right plot) transforms any\n    real-valued model prediction, n, back to a valid expected count\n    μ=exp⁡(η), which is always positive. This ensures our Poisson model\n    makes realistic predictions for count data.\n\n```{r}\n# Load required libraries\nlibrary(ggplot2)\n\n\n# Create data for mu (positive values only)\nmu <- seq(0.01, 10, length.out = 500)\neta_from_mu <- log(mu)\ndf1 <- data.frame(mu = mu, eta = eta_from_mu)\n\n# Create data for eta (real number line)\neta <- seq(-5, 5, length.out = 500)\nmu_from_eta <- exp(eta)\ndf2 <- data.frame(eta = eta, mu = mu_from_eta)\n\n# Plot 1: Link function (log)\n ggplot(df1, aes(x = mu, y = eta)) +\n  geom_line(color = \"blue\", linewidth = 1) +\n  labs(\n    title = \"Log Link Function: η = log(μ)\",\n    x = expression(mu ~ \"(mean of response)\"),\n    y = expression(eta ~ \"(linear predictor)\")\n  ) +\n  theme_minimal(base_size = 14)\n\n# Plot 2: Inverse link function (exp)\nggplot(df2, aes(x = eta, y = mu)) +\n  geom_line(color = \"forestgreen\", linewidth = 1) +\n  labs(\n    title = \"Inverse Link Function: μ = exp(η)\",\n    x = expression(eta ~ \"(linear predictor)\"),\n    y = expression(mu ~ \"(mean of response)\")\n  ) +\n  theme_minimal(base_size = 14)\n```\n","srcMarkdownNoYaml":"\n\n# Modelling processes that evolve randomly over time\n\nWelcome to the soft introduction into Poisson modelling in R!\n\nMany things in life can be modelled with the poisson process as it quite\nliterally models the long-term average rate of which random events occur\nindepdently. Its subjectively the most widely used model of a point\nprocess in time, and is suitable for\n\n-   Inbound calls to a call center\n\n-   Unique visitors to a website\n\n-   Walk-in arrivals to a physical location (customers or patients)\n\n-   The frequency of volcanic eruptions\n\nWhen we first learn about Poisson models, it's tempting to think the\nresponse mean is modeled directly as $\\mu_i = \\beta_0 + \\beta_1 x_i$,\nbut this isn\\'t actually valid. The mean must be non-negative, yet the\nlinear predictor $\\beta_0 + \\beta_1 x_i$ can be any real number,\nincluding negative values. Therefore, modelling $\\mu_i$ this way risks\npredicting impossible values (e.g. negative) values. To ensure\n$\\mu_i > 0$, R (and the underlying GLM framework) uses a **log link**\n$\\log(mu_i) = \\beta_0 + \\beta_1 x_i ⇒ \\mu_i =exp(beta_0 + \\beta_1 x_i)$\nThis transformation guarantees that \\$\\\\mu_i\\$ is always positive, even\nif the linear predictor is negative. You can think of the model as being\nlinear **on the log scale**. Further, due to the logarithmic\ntransformation, we must interpret coefficients multiplicatively: a\none-unit increase in $x$ is associated with a **multiplicative** change\nin $\\mu_i$.\n\nThese two plots help visualize how the Poisson model transforms values\nusing a **log link**. The log ensures the model stays linear on the log\nscale, while the exponential ensures predictions for the mean response,\nμ, are always positive.\n\n-   The log link function transforms the expected value of our response\n    variable, $\\mu$ (which must be ≥ 0) into a value on the real number\n    line. This is shown in the left plot: as $\\mu$increases, η=log⁡(μ)\n    grows slowly but without bounds.\n\n-   Conversely, the inverse link function (right plot) transforms any\n    real-valued model prediction, n, back to a valid expected count\n    μ=exp⁡(η), which is always positive. This ensures our Poisson model\n    makes realistic predictions for count data.\n\n```{r}\n# Load required libraries\nlibrary(ggplot2)\n\n\n# Create data for mu (positive values only)\nmu <- seq(0.01, 10, length.out = 500)\neta_from_mu <- log(mu)\ndf1 <- data.frame(mu = mu, eta = eta_from_mu)\n\n# Create data for eta (real number line)\neta <- seq(-5, 5, length.out = 500)\nmu_from_eta <- exp(eta)\ndf2 <- data.frame(eta = eta, mu = mu_from_eta)\n\n# Plot 1: Link function (log)\n ggplot(df1, aes(x = mu, y = eta)) +\n  geom_line(color = \"blue\", linewidth = 1) +\n  labs(\n    title = \"Log Link Function: η = log(μ)\",\n    x = expression(mu ~ \"(mean of response)\"),\n    y = expression(eta ~ \"(linear predictor)\")\n  ) +\n  theme_minimal(base_size = 14)\n\n# Plot 2: Inverse link function (exp)\nggplot(df2, aes(x = eta, y = mu)) +\n  geom_line(color = \"forestgreen\", linewidth = 1) +\n  labs(\n    title = \"Inverse Link Function: μ = exp(η)\",\n    x = expression(eta ~ \"(linear predictor)\"),\n    y = expression(mu ~ \"(mean of response)\")\n  ) +\n  theme_minimal(base_size = 14)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":2,"output-file":"poisson_introduction.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","theme":"cosmo","title":"poisson_introduction","author":"Brittany Alexandra","date":"`r Sys.Date()`","editor_options":{"markdown":{"wrap":72}},"toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}